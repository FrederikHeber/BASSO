libBasso - BAnach Sequential Subspace Optimization library
==========================================================

Basso is a library to minimize a constrained functional in a Banach space
setting. It is an extension of the sequentional subspace optimization
method by Narkiss by multiple search directions.

Installation instructions:
--------------------------

Basso depends on the following packages:
 * cmake - make utility for checking prerequisites
 * GSL - GNU Scientific library for function minimization
 * Eigen - C++ library for linear algebra
 * CppUnit - C++ library for unit testing
 * boost - almost standard library (we require 1.54 due to logging)
 * poco - poco is used (optionally) to write iteration information to
   a sqlite3 database

... on Ubuntu
-------------
Eigen and CppUnit packages and reside in standard paths, hence we have to do nothing

It is advised to compile the source in a distinct build directory, e.g. in a subfolder "build64". This is referred to as out-of-source build. To prepare the compilation, call cmake then as follows:

cmake ..

If additionally boost libraries do not reside in standard folders, such as
/usr/include, /usr/lib ... but in ~/packages/boost the following options might help:

cmake -DBoost_NO_SYSTEM_PATHS=ON -DBOOST_ROOT=~/packages/boost/

Note that boost libraries should have been compiled with "layout=tagged". Otherwise, FindBoost.cmake can not find the libraries and headers.

To allow for debugging, you might futher add "-DBoost_DEBUG=ON".

In general, to compile in debugging information add "-DCMAKE_BUILD_TYPE=Debug", to compile without use "-DCMAKE_BUILD_TYPE=Release".

Timing Measurements
-------------------

Add

-DUSE_TIMING

to activate the timing measurements of each part of the algorithm.


2014-08-22 Frederik Heber
